---
# Source: gitops-helm/templates/gitops-agent/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
automountServiceAccountToken: true
metadata:
  name: gitops-agent
  namespace: "my-target-namespace"
  labels:
    helm.sh/chart: gitops-helm-1.1.6
    app.kubernetes.io/name: harness-gitops-agent
    app.kubernetes.io/instance: argocd
    app.kubernetes.io/component: gitops-agent
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: harness-gitops
    app.kubernetes.io/version: "v0.74.1"
---
# Source: gitops-helm/templates/upgrader/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: gitops-agent-upgrader
  namespace: "my-target-namespace"
  labels:
    helm.sh/chart: gitops-helm-1.1.6
    app.kubernetes.io/name: harness-gitops-agent-upgrader
    app.kubernetes.io/instance: argocd
    app.kubernetes.io/component: gitops-agent-upgrader
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: harness-gitops
    app.kubernetes.io/version: "v0.74.1"
---
# Source: gitops-helm/templates/gitops-agent/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  labels:
    helm.sh/chart: gitops-helm-1.1.6
    app.kubernetes.io/name: harness-agent-secret
    app.kubernetes.io/instance: argocd
    app.kubernetes.io/component: gitops-agent
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: harness-gitops
    app.kubernetes.io/version: "v0.74.1"
  name: gitops-agent
  namespace: my-target-namespace
type: Opaque
stringData:
  GITOPS_AGENT_TOKEN: |
    LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFdWdJQkFEQU5CZ2txaGtpRzl3MEJBUUVGQUFTQ0JLUXdnZ1NnQWdFQUFvSUJBUUM4NWw0QXcvQ0FZVUdJCjJOdWNGSmsvYU1lUEM5VUwyR1QvaGRWcTVHTlJpMUtHTlQ5eXgzL1lnaTU1QitNdVIwanhPYUNhbndGdm94SWwKWklTODVjakVhRk9OUHUvUDZzOTIrN1llNkw4bkw1Y3lVVDJIQmJaOHBDZG9ENjZPYlhXcXR5Z1ZaaHVEelFnVgpPbTBqcDhHNkNWU1l0V2hZWHpScklmUDdNSnJGUmZ3SnRCbnB5Q3Fmc0ZkVEpCMjVUaVVjVnlIQWZoWVZqOVMyCjR2OEdsc3dPR29Ua2R0NTJhZ2VvR0FIZi9pN1NobFVTUWpuWDhMRXJmaFpTUm5LR3Yxc1Y5dTVNajRGTk5Xa2kKbHVVbUl2Q21hdlo0b0crS3pvUDYxSHIzZnZKdXdNM3l3L3YxalZMODNVV3pham8rWTlJYUFlRXVSRTBFL1o3cApFS05LdnZHWEFnTUJBQUVDZ2Y4RWJXSEdvdEVBTVVkWDdiMDM2ME9zT01oMGtkSnNkS1hwVnptcFI3RU1PRGUyCjdZaVBLQjNXOVRZaG9BMnpCL2l0cnF3VTg2VVUrTDEwSXViNWhta3VNVVBFQzdXVEtlMnkzRE5vaGd2MDN5aXMKQlR0cjdyWllOWUMyNzZjbnIya1NsemhaU0F0ZEMzRWxEam1BbkczdDdrb05Tak1uM3hOYmIzQkljdHN0eEd2VQpSWERiK0k3Zk15clhSY1ZpSmh6emlQTkZqTnczYUZtMklKWDMwT3k2SzRvb2pObFJWR3pmbXpmdzJxUGNVREYzCllzSytVWkpmRHRmMUpTdks3NjJDc0hkeDhsQW1ROEFmUGxBRFo5VVhBOFBVWUpyVFpnVDNzV0NEbTIzdzNCdVYKb3ZIM2pHdTlLTEVZQ2NXUisrS1U1NFliSEtOdkRYWDlFSWN3Q3lFQ2dZRUExd0RNZDJod2JJZjRqQWJycU9KNQp4aDRhQUxyQ2cvODJGZDBnTkYweUNObDIvMUNvS2JvUHN4TmlJSlFvbkhmMFoxSnVLZ1BjR0xWTjR2eElmbnQ2CjhLVHc5YmZDZ2kzS252RThQZE1nWEpSdHlqRmhkenF4ZFBsNk11WkR2UFZMYTZHVGx5VHBFeStSdm1ZZ3F4a0cKL3c5YmREZHpiYUhmZE1wNlJ3VVFMZjhDZ1lFQTRPdGNITy9GNzNkZ3lZN0pBNFRwMnJmci9wc0xScldXNUhBTApjVUxwVnJDWUlqcWp1bDlsUytpeDlKNFNIb2M2VEh4MUNsQ3gwRnRSc3F2TnpBYXdWMkZjU0MzWFVGd1p1YkdkCmNiUmVmdTNZc3V2WEdrLzQvMkwyUHp5UzgyMGQrZ2JFZGJ1VHM0bmowZGpQU29VZXV1ajNRZHV4SFhCTlV3Z3EKL0MxTDdHa0NnWUIzWG9nbTI2TmZmblp1T0FGcStLS25ibHI5Z0xNeVdlV0xhZ1BSVHRUU3VQb3FjbnVLL3pScwpOaHpLL2JjMmVCc0hxbXBqaFZVVG1zV3RlbWc5WVEwMndqek9EOEk4U0hRd25yclZrSHh0S2pOeWlNd1dTRTN5CkpmakVmYmVxRjM1U09aa1oxM0pZSnBjQ1lPMU9VVXpqRzRHcEdvaEpuQS9XWmZ4UnBldi92UUtCZ0ZFRHRid2UKaVpkRjByRUhJMVNITFl6QXJ0cVlraWs0QTAvcEk5WDZHZjVGd2FhaXBKTGZCYWVmKzJsMi9tUE1wYTBqTHkwMQovN1pqRGp4ak1jK0pvVDc0TExzNjk5RlVPMWZ0cUI1cXI1YmNxUzlaVDdPRWx0VzJtYWdSYzRVSENzTWlhT1ZYCldVNVVIcUZaak9EMHJpcjQrd2JYMFNZZmExcTdHSENaQ0QzeEFvR0FLZ24vWjFlaGxhT3dpOU03bGswOEJ1Nk4KTEs0TzFlS1d5emtrbEFydkpFd3JkWHVjNW56QTczeHFPS1V0NWNuYzNyWjZxdlhkdGRzNjhnUFVmajc2TmRRUApHWllQUmxjRnF3Z2xjbEVjK0VIUGNUTzErTWUxSlZKU2Zoa1Voc1dUblEyQWcwSkVHWTRkeGJHb0ozMmlxQ3grCkdkbDN3c05lcmo1MjBSaGtnMEk9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: gitops-helm/templates/gitops-agent/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  labels:
    helm.sh/chart: gitops-helm-1.1.6
    app.kubernetes.io/name: harness-agent-ssh
    app.kubernetes.io/instance: argocd
    app.kubernetes.io/component: gitops-agent
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: harness-gitops
    app.kubernetes.io/version: "v0.74.1"
  name: gitops-agent-mtls
  namespace: my-target-namespace
data:
  client.crt: |
    
  client.key: |
---
# Source: gitops-helm/templates/gitops-agent/configmap.yaml
apiVersion: v1
data:
  GITOPS_ACCOUNT_IDENTIFIER: XUvKv0fQQgOyK4rpSFd3nw
  GITOPS_AGENT_IDENTIFIER: harnesshelmtest
  GITOPS_ORG_IDENTIFIER: default
  GITOPS_PROJECT_IDENTIFIER: notesappexample
  GITOPS_SERVICE_HTTP_TLS_ENABLED: "false"
  GITOPS_SERVICE_HTTP_CERT_FILES: /tmp/ca.bundle
  GITOPS_SERVICE_MTLS_ENABLED: "false"
  GITOPS_SERVICE_HTTP_CLIENT_CERT: /etc/mtls/client.crt
  GITOPS_SERVICE_HTTP_CLIENT_KEY: /etc/mtls/client.key
  AGENT_HTTP_TARGET: https://app.harness.io/gitops
  GITOPS_SERVICE_PROTOCOL: HTTP1
  GITOPS_AGENT_ENABLE_RECONCILE: "true"
  GITOPS_AGENT_RECONCILE_INTERVAL: "100"
  GITOPS_AGENT_DISCOVER_APPLICATION_PODS_DURATION_IN_SECS: "120"
  LOG_LEVEL: debug
  GITOPS_AGENT_FETCH_TYPE: "POLLER"
  GITOPS_ARGOCD_REPO: argocd-repo-server
  GITOPS_ARGOCD_REDIS: argocd-redis
  GITOPS_ARGOCD_REDIS_HA: redis-ha
  GITOPS_ARGOCD_REDIS_HA_PROXY: redis-ha-haproxy
  GITOPS_ARGOCD_APP_CONTROLLER: argocd-application-controller
  GITOPS_ARGOCD_APPSET_CONTROLLER: argocd-applicationset-controller
  GITOPS_AGENT_AVAILABILITY_MODE: NON-HA
  ARGOCD_SERVER_REPO_SERVER: argocd-repo-server:8081
  REDIS_SERVER: argocd-redis:6379
kind: ConfigMap
metadata:
  labels:
    helm.sh/chart: gitops-helm-1.1.6
    app.kubernetes.io/name: harness-gitops-agent-cm
    app.kubernetes.io/instance: argocd
    app.kubernetes.io/component: gitops-agent
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: harness-gitops
    app.kubernetes.io/version: "v0.74.1"
  name: gitops-agent
  namespace: my-target-namespace
---
# Source: gitops-helm/templates/upgrader/harness-upgrader-cm.yaml
apiVersion: v1
data:
  UPGRADER_GITOPS_ACCOUNT_IDENTIFIER: XUvKv0fQQgOyK4rpSFd3nw
  UPGRADER_GITOPS_AGENT_IDENTIFIER: harnesshelmtest
  UPGRADER_GITOPS_ORG_IDENTIFIER: default
  UPGRADER_GITOPS_PROJECT_IDENTIFIER: notesappexample
  UPGRADER_MODE: GitopsAgent
  UPGRADER_NAMESPACE: my-target-namespace
  UPGRADER_WORKLOAD_NAME: gitops-agent
  UPGRADER_CONTAINER_NAME: gitops-agent
  UPGRADER_GITOPS_AGENT_HTTP_TARGET: https://app.harness.io/prod1/gitops
  UPGRADER_GITOPS_USE_V2: "true"
  UPGRADER_GITOPS_ALL: "false"
kind: ConfigMap
metadata:
  name: gitops-agent-upgrader
  namespace: "my-target-namespace"
---
# Source: gitops-helm/templates/gitops-agent/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: gitops-agent
  namespace: "my-target-namespace"
  labels:
    helm.sh/chart: gitops-helm-1.1.6
    app.kubernetes.io/name: harness-gitops-agent
    app.kubernetes.io/instance: argocd
    app.kubernetes.io/component: gitops-agent
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: harness-gitops
    app.kubernetes.io/version: "v0.74.1"
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  - configmaps
  verbs:
  - create
  - get
  - list
  - watch
  - update
  - patch
  - delete
- apiGroups:
  - external-secrets.io
  resources:
    - externalsecrets
  verbs:
    - get
    - list
    - watch
    - update
    - patch
    - delete
    - create
- apiGroups:
    - generators.external-secrets.io
  resources:
    - gcraccesstokens
    - ecrauthorizationtokens
  verbs:
    - get
    - list
    - watch
    - update
    - patch
    - delete
    - create
- apiGroups:
  - argoproj.io
  resources:
  - applications
  - appprojects
  verbs:
  - create
  - get
  - list
  - watch
  - update
  - delete
  - patch
- apiGroups:
  - ""
  resources:
  - events
  - pods
  verbs:
  - create
  - list
  - watch
  - get
- apiGroups:
    - apps
  resources:
    - deployments
  verbs:
    - update
    - patch
---
# Source: gitops-helm/templates/upgrader/role.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: gitops-agent-upgrader
  namespace: "my-target-namespace"
  labels:
    helm.sh/chart: gitops-helm-1.1.6
    app.kubernetes.io/name: harness-gitops-agent-upgrader
    app.kubernetes.io/instance: argocd
    app.kubernetes.io/component: gitops-agent-upgrader
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: harness-gitops
    app.kubernetes.io/version: "v0.74.1"
rules:
  - apiGroups:
    - batch
    - apps
    - extensions
    resources:
    - cronjobs
    verbs:
    - get
    - list
    - watch
    - update
    - patch
  - apiGroups:
    - extensions
    - apps
    resources:
    - deployments
    - statefulsets
    verbs:
    - get
    - list
    - watch
    - create
    - update
    - patch
---
# Source: gitops-helm/templates/gitops-agent/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: gitops-agent
  namespace: "my-target-namespace"
  labels:
    helm.sh/chart: gitops-helm-1.1.6
    app.kubernetes.io/name: harness-gitops-agent
    app.kubernetes.io/instance: argocd
    app.kubernetes.io/component: gitops-agent
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: harness-gitops
    app.kubernetes.io/version: "v0.74.1"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: gitops-agent
subjects:
- kind: ServiceAccount
  name: gitops-agent
  namespace: my-target-namespace
---
# Source: gitops-helm/templates/upgrader/rolebinding.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: gitops-agent-upgrader
  namespace: "my-target-namespace"
  labels:
    helm.sh/chart: gitops-helm-1.1.6
    app.kubernetes.io/name: harness-gitops-agent-upgrader
    app.kubernetes.io/instance: argocd
    app.kubernetes.io/component: gitops-agent-upgrader
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: harness-gitops
    app.kubernetes.io/version: "v0.74.1"
roleRef:
  kind: Role
  name: gitops-agent-upgrader
  apiGroup: ""
subjects:
  - kind: ServiceAccount
    name: gitops-agent-upgrader
    namespace: "my-target-namespace"
---
# Source: gitops-helm/templates/gitops-agent/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gitops-agent
  namespace: "my-target-namespace"
  labels:
    helm.sh/chart: gitops-helm-1.1.6
    app.kubernetes.io/name: harness-gitops-agent
    app.kubernetes.io/instance: argocd
    app.kubernetes.io/component: gitops-agent
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: harness-gitops
    app.kubernetes.io/version: "v0.74.1"
spec:
  replicas: 1
  revisionHistoryLimit: 
  selector:
    matchLabels:
      app.kubernetes.io/name: harness-gitops-agent
      app.kubernetes.io/instance: argocd
  template:
    metadata:
      annotations:
      labels:
        helm.sh/chart: gitops-helm-1.1.6
        app.kubernetes.io/name: harness-gitops-agent
        app.kubernetes.io/instance: argocd
        app.kubernetes.io/component: gitops-agent
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: harness-gitops
        app.kubernetes.io/version: "v0.74.1"
    spec:
      terminationGracePeriodSeconds: 30
      serviceAccountName: gitops-agent
      containers:
      - command:
          - /app/agent
        name: gitops-agent
        image: harness/gitops-agent:v0.74.1
        imagePullPolicy: Always
        envFrom:
          - configMapRef:
              name: gitops-agent
          - secretRef:
              name: gitops-agent
        volumeMounts:
        - mountPath: /app/config/ssh
          name: ssh-known-hosts
        - mountPath: /app/config/tls
          name: tls-certs
        - mountPath: /app/config/server/tls
          name: argocd-repo-server-tls
        - mountPath: /home/argocd
          name: plugins-home
        - mountPath: /tmp
          name: tmp
        - mountPath: /etc/mtls
          name: mtls-certs
        - mountPath: /app/logs
          name: log-volume
        startupProbe:
          exec:
            command:
              - test
              - -s
              - logs/agent.log
          initialDelaySeconds: 10
          periodSeconds: 5
          failureThreshold: 32
        livenessProbe:
          httpGet:
            path: /healthz?full=true
            port: 8090
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8090
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 3
        resources:
          limits:
            cpu: "1"
            memory: 512Mi
          requests:
            cpu: "1"
            memory: 512Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
      volumes:
      - name: plugins-home
        emptyDir: {}
      - name: tmp
        emptyDir: {}
      - name: ssh-known-hosts
        configMap:
          name: argocd-ssh-known-hosts-cm
          defaultMode: 420
      - name: tls-certs
        configMap:
          name: argocd-tls-certs-cm
          defaultMode: 420
      - name: argocd-repo-server-tls
        secret:
          secretName: argocd-repo-server-tls
          optional: true
          items:
          - key: tls.crt
            path: tls.crt
          - key: tls.key
            path: tls.key
          - key: ca.crt
            path: ca.crt
      - name: mtls-certs
        secret:
          secretName: gitops-agent-mtls
          optional: true
          items:
          - key: client.crt
            path: client.crt
          - key: client.key
            path: client.key
      
      - name: log-volume
        emptyDir: { }
      dnsPolicy: ClusterFirst
---
# Source: gitops-helm/templates/upgrader/cronjob.yaml
apiVersion: batch/v1
kind: CronJob
metadata:
  name: gitops-agent-upgrader
  namespace: "my-target-namespace"
  labels:
    helm.sh/chart: gitops-helm-1.1.6
    app.kubernetes.io/name: harness-gitops-agent-upgrader
    app.kubernetes.io/instance: argocd
    app.kubernetes.io/component: gitops-agent-upgrader
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: harness-gitops
    app.kubernetes.io/version: "v0.74.1"
spec:
  schedule: "0 */4 * * *"
  concurrencyPolicy: Forbid
  startingDeadlineSeconds: 20
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: gitops-agent-upgrader
          containers:
            - name: upgrader
              image: harness/upgrader:latest
              imagePullPolicy: Always
              envFrom:
                - configMapRef:
                    name: gitops-agent-upgrader
              env:
                - name: POD_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: UPGRADER_TOKEN
                  valueFrom:
                    secretKeyRef:
                      key: GITOPS_AGENT_TOKEN
                      name: gitops-agent
              volumeMounts:
                - name: mtls-certs
                  mountPath: /etc/mtls
                - name: config-volume
                  mountPath: /etc/config
          volumes:
            - name: config-volume
              configMap:
                name: gitops-agent-upgrader
            - name: mtls-certs
              secret:
                secretName: gitops-agent-mtls
                optional: true
                items:
                  - key: client.crt
                    path: client.crt
                  - key: client.key
                    path: client.key
          restartPolicy: Never
